# https://github.com/nginx-with-docker/ngx_http_qrcode_module/blob/main/nginx.conf
load_module modules/ngx_http_qrcode_module.so;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    upstream memcache_server {
        server memcached:11211;
        keepalive 512;
    }

    server {
        listen 80;
        server_name localhost;

        location = /favicon.ico {
            access_log off; empty_gif;
        }

        memcached_buffer_size 4k;
        memcached_connect_timeout 30s;
        memcached_read_timeout 30s;
        memcached_send_timeout 30s;
        memcached_socket_keepalive on;

        location / {
            set $memcached_key "$uri?$args";
            set $memc_exptime 300;
            #or set $memcached_key $query_string;

            memcached_pass memcache_server;
            error_page 404 502 504 = @private;
        }


        location @private {
            # internal;
            add_header X-Cache-Key $memcached_key;
            set $key $uri;
            srcache_fetch GET /memc $key;
            srcache_store PUT /memc $key;

            set $fg_color 000000;
            set $bg_color FFFFFF;
            set $level 0;
            set $hint 2;
            set $size 300;
            set $margin 80;
            set $version 2;
            set $case 0;
            set $txt "https://soulteary.com";

            if ( $arg_fg_color ) {
                set $fg_color $arg_fg_color;
            }
            if ( $arg_bg_color ) {
                set $bg_color $arg_bg_color;
            }
            if ( $arg_level ) {
                set $level $arg_level;
            }
            if ( $arg_hint ) {
                set $hint $arg_hint;
            }
            if ( $arg_size ) {
                set $size $arg_size;
            }
            if ( $arg_margin ) {
                set $margin $arg_margin;
            }
            if ( $arg_ver ) {
                set $version $arg_ver;
            }
            if ( $arg_case ) {
                set $case $arg_case;
            }
            if ( $arg_txt ) {
                set $txt $arg_txt;
            }

            qrcode_fg_color $fg_color;
            qrcode_bg_color $bg_color;

            qrcode_level $level;
            qrcode_hint $hint;
            qrcode_size $size;
            qrcode_margin $margin;
            qrcode_version $version;
            qrcode_casesensitive $case;
            qrcode_urlencode_txt $txt;

            qrcode_gen;
        }


    }
}